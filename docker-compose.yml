# Optimized for OrbStack

services:
  # PostgreSQL 17 Database
  db:
    image: postgres:17-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=ecommerce_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for caching and Celery broker
  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Django Web Application
  django:
    build: .
    entrypoint: ["/usr/local/bin/docker-entrypoint-dev.sh"]
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=api.settings.dev
      - DEBUG=1
      - SECRET_KEY=your-secret-key-here-change-in-production
      - DB_NAME=ecommerce_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - FRONTEND_URL=http://localhost:3000
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0,django
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network

  # Celery Worker
  celery:
    build: .
    entrypoint: ["/usr/local/bin/docker-entrypoint-dev.sh"]
    command: celery -A api worker --loglevel=info
    volumes:
      - .:/app
    environment:
      - DJANGO_SETTINGS_MODULE=api.settings.dev
      - DEBUG=1
      - SECRET_KEY=your-secret-key-here-change-in-production
      - DB_NAME=ecommerce_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - FRONTEND_URL=http://localhost:3000
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network

  # Celery Beat (Scheduler)
  celery-beat:
    build: .
    entrypoint: ["/usr/local/bin/docker-entrypoint-dev.sh"]
    command: celery -A api beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    environment:
      - DJANGO_SETTINGS_MODULE=api.settings.dev
      - DEBUG=1
      - SECRET_KEY=your-secret-key-here-change-in-production
      - DB_NAME=ecommerce_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - FRONTEND_URL=http://localhost:3000
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      django:
        condition: service_started
    networks:
      - app-network

  # Flower (Celery Monitoring)
  flower:
    build: .
    entrypoint: ["/usr/local/bin/docker-entrypoint-dev.sh"]
    command: celery -A api flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - DJANGO_SETTINGS_MODULE=api.settings.dev
      - DEBUG=1
      - SECRET_KEY=your-secret-key-here-change-in-production
      - DB_NAME=ecommerce_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - FRONTEND_URL=http://localhost:3000
    depends_on:
      - celery
      - redis
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume: